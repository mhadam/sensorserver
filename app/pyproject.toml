[tool.poetry]
name = "sensorserver"
version = "0.1.0"
description = ""
authors = ["mhadam <michael@hadam.us>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "0.78.0"
Hypercorn = "^0.11.2"
bcrypt = "^3.2.0"
passlib = "^1.7.4"
alembic = "^1.6.5"
psycopg2 = "^2.9.1"
pydantic = {extras = ["email"], version = "^1.8.2"}
python-multipart = "^0.0.5"
fastapi-users = {extras = ["sqlalchemy"], version = "^10.1.1"}
SQLAlchemy = {extras = ["asyncio"], version = "^1.4.39"}
asyncpg = "^0.24.0"
databases = {extras = ["postgresql"], version = "^0.5.2"}
typer = "^0.4.0"
matplotlib = "^3.5.1"
pandas = "^1.3.5"
aiofiles = "^0.8.0"
Jinja2 = "^3.1.2"

[tool.poetry.dev-dependencies]
ward = "^0.63.0-beta.0"
httpx = "^0.18.2"
asgi-lifespan = "^1.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ward]
path = ["unit_tests", "integration_tests"]  # supply multiple paths using a list
capture-output = false  # enable or disable output capturing (e.g. to use debugger)
order = "standard"  # or 'random'
output-mode = "test-per-line"  # or 'dots-global', 'dot-module'
fail-limit = 20  # stop the run if 20 fails occur
#search = "my_function"  # search in test body or description
progress-style = ["bar"]  # display a progress bar during the run